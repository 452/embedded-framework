plugins {
    id 'java-library'
    id 'maven-publish'
}

def globalName    = 'embedded-framework'
def globalUrl     = 'https://github.com/452/embedded-framework'
def globalVersion = '0.0.1'
def globalDesc    = 'Java embedded-framework'
archivesBaseName = globalName
description = globalDesc
group 'com.github.452'
version '0.0.1'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.github.452', name: 'java-i2c-tools', version: '0.0.1'
    testCompile group: 'io.dvlopt', name: 'linux-i2c', version: '1.0.0'
}

def pomConfig = {

    licenses {
        license {
            name 'Apache License, Version 2.0'
            url  'http://www.apache.org/licenses/LICENSE-2.0'
        }
    }

    developers {
        developer {
            name            'Ihor Lavryniuk'
            email           'sp.titan@gmail.com'
            organization    'Aleph'
            organizationUrl 'https://github.com/452'
        }
    }

    scm {
        connection          'scm:git:git://github.com/452/embedded-framework.git'
        developerConnection 'scm:git:ssh://github.com/452/embedded-framework.git'
        url                 globalUrl
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications { mavenJava( MavenPublication ) {
            groupId    group
            artifactId 'embedded-framework'
            version    globalVersion

            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('name', globalName)
                root.appendNode('description', globalDesc)
                root.appendNode('url', globalUrl)
                root.children().last() + pomConfig
            }
        }
    }
}